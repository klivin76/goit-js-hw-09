{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAuBC,GACrBA,EAAEC,iBAEF,MAAMC,EAAQC,OAAOH,EAAEI,OAAOC,SAASC,MAAMC,OACvCC,EAAOL,OAAOH,EAAEI,OAAOC,SAASG,KAAKD,QAgB7C,SAA8BE,GAC5B,MAAMC,EAAoB,GAC1B,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAGE,GAAK,EAC3BD,EAAkBE,KAAKD,GAEzB,OAAOD,C,EAlBLG,CAFaV,OAAOH,EAAEI,OAAOC,SAASS,OAAOP,QAEhBQ,QAAO,CAACC,EAAOC,KAqBhD,IAAuBC,EAAUZ,EAb7B,OAamBY,EApBLD,EAoBeX,EApBLU,EAqBnB,IAAIG,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCC,YAAW,IAAMJ,EAAQ,C,SAAEF,E,MAAUZ,KAAUA,GAE/CkB,YAAW,IAAMH,EAAO,C,SAAEH,E,MAAUZ,KAAUA,EAAM,KA1BnDmB,MAAK,EAACP,SAAEA,EAAQZ,MAAEA,MACjBX,EAAA+B,OAAOC,QAAQ,uBAAqBT,QAAiBZ,MAAU,IAEhEsB,OAAM,EAACV,SAAEA,EAAQZ,MAAEA,MAClBX,EAAA+B,OAAOG,QAAQ,sBAAoBX,QAAeZ,MAAU,IAExDU,EAASR,CAAI,GACpBN,GACHF,EAAE8B,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', formSubmitBtn);\n\nfunction formSubmitBtn(e) {\n  e.preventDefault();\n\n  const delay = Number(e.target.elements.delay.value);\n  const step = Number(e.target.elements.step.value);\n  const amount = Number(e.target.elements.amount.value);\n  \n    getPromisesPositions(amount).reduce((delay, position) => {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    return (delay += step);\n  }, delay);\n  e.currentTarget.reset();\n};\n\nfunction getPromisesPositions(n) {\n  const promisesPositions = [];\n  for (let i = 1; i <= n; i += 1) {\n    promisesPositions.push(i);\n  };\n  return promisesPositions;\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      setTimeout(() => resolve({ position, delay }), delay);\n    } else {\n      setTimeout(() => reject({ position, delay }), delay);\n    };\n  });\n};\n"],"names":["$iQIUW","parcelRequire","document","querySelector","addEventListener","e","preventDefault","delay1","Number","target","elements","delay","value","step","n","promisesPositions","i","push","$47d4ff9957288465$var$getPromisesPositions","amount","reduce","delay2","position1","position","Promise","resolve","reject","Math","random","setTimeout","then","Notify","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.07e321f0.js.map"}